#!/sbin/runscript
# Distributed under the terms of the GNU General Public License, v2 or later

# Derniere modification: 26/06/2013

bootdir='/livemnt/boot'

depend() 
{
	#need net
	# Sans le echo, il se produit une erreur???
	echo ""
}

start()
{
	ebegin "Starting the pxe-boot-server"

	# Ajout perso:
	mkdir -p /tftpboot/pxelinux.cfg

	# ---- check the cdrom files exist
	#for curfile in sysrcd.dat isolinux/rescue32 isolinux/initram.igz isolinux/isolinux.cfg
	#do
	#	cur="${bootdir}/$curfile"
	#	if [ ! -f $cur ]
	#	then
	#		eerror "File \"$cur\" does not exists. Cannot start the pxebootsrv daemon."
	#		return 1
	#	fi
	#done
	if ! ls -l ${bootdir}/sysrcd.dat ${bootdir}/???linux/???linux.cfg >/dev/null 2>&1
	then
		eerror "Files are missing, please check you are running a valid SystemRescueCd"
		return 1
	fi

	# ---- check the config file exists
	if [ ! -f /etc/conf.d/pxebootsrv ]
	then
		eerror "The pxebootsrv configuration file \"/etc/conf.d/pxebootsrv\" does not exists. Cannot continue."
		return 1
	fi

	# ---- check the major options are set to 'yes' or 'no'
	if [ "$PXEBOOTSRV_DODHCPD" != "yes" ] && [ "$PXEBOOTSRV_DODHCPD" != "no" ]
	then
		eerror "Invalid value for PXEBOOTSRV_DODHCPD. Must be \"yes\" or \"no\" (lowercase)."
		return 1
	fi

	if [ "$PXEBOOTSRV_DOTFTPD" != "yes" ] && [ "$PXEBOOTSRV_DOTFTPD" != "no" ]
	then
		eerror "Invalid value for PXEBOOTSRV_DOTFTPD. Must be \"yes\" or \"no\" (lowercase)."
		return 1
	fi

	if [ "$PXEBOOTSRV_DOHTTPD" != "yes" ] && [ "$PXEBOOTSRV_DOHTTPD" != "no" ]
	then
		eerror "Invalid value for PXEBOOTSRV_DOHTTPD. Must be \"yes\" or \"no\" (lowercase)."
		return 1
	fi

	if [ "$PXEBOOTSRV_DONFSD" != "yes" ] && [ "$PXEBOOTSRV_DONFSD" != "no" ]
	then
		eerror "Invalid value for PXEBOOTSRV_DONFSD. Must be \"yes\" or \"no\" (lowercase)."
		return 1
	fi

	if [ "$PXEBOOTSRV_DONBD" != "yes" ] && [ "$PXEBOOTSRV_DONBD" != "no" ]
	then
		eerror "Invalid value for PXEBOOTSRV_DONBD. Must be \"yes\" or \"no\" (lowercase)."
		return 1
	fi

	if [ "$PXEBOOTSRV_DONBD" = "yes" ] && [ "$PXEBOOTSRV_DONFSD" = "yes" ]
	then
		eerror "You must choose between NFS and NBD server, they cannot be enabled in the same time."
		return 1
	fi

	if [ "$PXEBOOTSRV_DODHCPD" == "yes" ]
	then
		# ---- prepare /etc/dhcp/dhcpd.conf from /etc/conf.d/pxebootsrv
		[ -f /etc/dhcp/dhcpd.conf ] && cp /etc/dhcp/dhcpd.conf /etc/dhcp/dhcpd.bak
		cp /etc/dhcp/dhcpd.orig /etc/dhcp/dhcpd.conf
	
		if [ -z "$PXEBOOTSRV_SUBNET" -o -z "$PXEBOOTSRV_NETMASK" ]
		then
			eerror "Invalid values for PXEBOOTSRV_SUBNET or PXEBOOTSRV_NETMASK"
			return 1
		else
			sed -i -e "s/subnet 192.168.1.0 netmask 255.255.255.0/subnet $PXEBOOTSRV_SUBNET netmask $PXEBOOTSRV_NETMASK/" /etc/dhcp/dhcpd.conf
			sed -i -e "s/option subnet-mask 255.255.255.0;/option subnet-mask $PXEBOOTSRV_NETMASK;/" /etc/dhcp/dhcpd.conf
		fi
	
		if [ -z "$PXEBOOTSRV_DEFROUTE" ]
		then
			eerror "The config variable PXEBOOTSRV_DEFROUTE is missing"
			return 1
		else
			sed -i -e "s/option routers 192.168.1.254;/option routers $PXEBOOTSRV_DEFROUTE;/" /etc/dhcp/dhcpd.conf
		fi
	
		if [ -z "$PXEBOOTSRV_DHCPRANGE" ]
		then
			eerror "The config variable PXEBOOTSRV_DHCPRANGE is missing"
			return 1
		else
			sed -i -e "s/range dynamic-bootp 192.168.1.100 192.168.1.150;/range dynamic-bootp $PXEBOOTSRV_DHCPRANGE;/" /etc/dhcp/dhcpd.conf
		fi
	
		if [ -z "$PXEBOOTSRV_TFTPSERVER" ]
		then
			eerror "The config variable PXEBOOTSRV_TFTPSERVER is missing"
			return 1
		else
			sed -i -e "s/next-server 192.168.1.5;/next-server $PXEBOOTSRV_TFTPSERVER;/" /etc/dhcp/dhcpd.conf
		fi
	
		if [ -n "$PXEBOOTSRV_DNS" ]
		then
			sed -i -e "s/option domain-name-servers 192.168.1.254;/option domain-name-servers $PXEBOOTSRV_DNS;/" /etc/dhcp/dhcpd.conf
		fi
	fi

	if [ "$PXEBOOTSRV_DOTFTPD" == "yes" ]
	then
		if [ -e "/tmp/pxebootsrv_old_way" ]; then
			# ---- copy all files in isolinux to /tftpboot/
			for curfile in ${bootdir}/isolinux/*
			do
				if [ -f $curfile ] # if not a directory
				then
					cp $curfile /tftpboot/ --remove-destination
					if [ ! "$?" -eq '0' ]
					then
						eerror "Cannot copy \"$curfile\" to /tftpboot/. Memory probably missing."
						return 1
					fi
				fi
			done
	
			# ---- copy the bootdisks to /tftpboot/
			cp -r --remove-destination ${bootdir}/bootdisk /tftpboot/
			if [ ! "$?" -eq '0' ]
			then
				rm -rf /tftpboot/bootdisk
				eerror "Cannot copy the bootdisk directory to /tftpboot/. Memory probably missing."
				return 1
			fi
		fi

		# ---- prepare pxelinux config file
		[ ! -d /tftpboot/pxelinux.cfg ] && mkdir -p /tftpboot/pxelinux.cfg
		[ ! -f /tftpboot/pxelinux.0 ] && cp /usr/share/syslinux/pxelinux.0 /tftpboot/
		[ -f /tftpboot/pxelinux.cfg/default.bak ] && rm -f /tftpboot/pxelinux.cfg/default.bak
		[ -f /tftpboot/pxelinux.cfg/default ] && mv /tftpboot/pxelinux.cfg/default /tftpboot/pxelinux.cfg/default.bak
		#cp --remove-destination ${bootdir}/???linux/{*msg,*c32,*.0,memdisk,netboot} /tftpboot/
		# Ajout de la redir erreur vers null pour les *c32 qui ne sont pas forcement present (je ne suis pas passe aux menu.c32 pour le moment...)
		#cp --remove-destination ${bootdir}/???linux/{*msg,*c32,*.0,memdisk,netboot} /tftpboot/ 2>/dev/null
		echo ""
		echo "Copie des fichiers *.msg, *.c32, *.0, memdisk, netboot vers /tftpboot"
		for i in f1boot.msg f3params.msg f5troubl.msg f7net.msg f2images.msg f4arun.msg f6pxe.msg chain.c32 kbdmap.c32 reboot.c32 ifcpu64.c32 menu.c32 vesamenu.c32 memdisk netboot pxelinux.0
		do
			if [ -e ${bootdir}/isolinux/$i ]; then
				cp --remove-destination ${bootdir}/???linux/$i /tftpboot/ 2>/dev/null
			elif [ -e ${bootdir}/syslinux/$i ]; then
				cp --remove-destination ${bootdir}/syslinux/$i /tftpboot/ 2>/dev/null
			fi
		done


		#cp --remove-destination ${bootdir}/???linux/{*.msg,*.0,memdisk,netboot} /tftpboot/

		# Probleme si les deux fichiers isolinux.cfg et syslinux.cfg existent dans le dossier
		#cp --remove-destination ${bootdir}/???linux/???linux.cfg /tftpboot/pxelinux.cfg/default
		echo ""
		echo "Mise en place du fichier de config /tftpboot/pxelinux.cfg/default"
		if [ -e ${bootdir}/isolinux/isolinux.cfg ]; then
			cp --remove-destination ${bootdir}/isolinux/isolinux.cfg /tftpboot/pxelinux.cfg/default
		elif [ -e ${bootdir}/isolinux/syslinux.cfg ]; then
			cp --remove-destination ${bootdir}/isolinux/syslinux.cfg /tftpboot/pxelinux.cfg/default
		elif [ -e ${bootdir}/syslinux/isolinux.cfg ]; then
			cp --remove-destination ${bootdir}/syslinux/isolinux.cfg /tftpboot/pxelinux.cfg/default
		elif [ -e ${bootdir}/syslinux/syslinux.cfg ]; then
			cp --remove-destination ${bootdir}/syslinux/syslinux.cfg /tftpboot/pxelinux.cfg/default
		fi
		ls -lh /tftpboot/pxelinux.cfg/default
		#============================================
		# Fichier de description des entrees de isolinux.cfg uniquement present sur mon multiboot
		#cp ${bootdir}/???linux/bootmsg.txt /tftpboot/
		if [ -e ${bootdir}/isolinux/bootmsg.txt ]; then
			cp ${bootdir}/isolinux/bootmsg.txt /tftpboot/
		elif [ -e ${bootdir}/syslinux/bootmsg.txt ]; then
			cp ${bootdir}/syslinux/bootmsg.txt /tftpboot/
		fi
		#============================================
		# Nettoyage des specifications autorun:
		sed -i "s!autoruns=0 ar_nowait!!g" /tftpboot/pxelinux.cfg/default
		#============================================
		if [ -n "$PXEBOOTSRV_TIMEOUT" ]
		then
			sed -i -e "s!^TIMEOUT .*!TIMEOUT $PXEBOOTSRV_TIMEOUT!i" /tftpboot/pxelinux.cfg/default
		fi
		#sed -i -e "s!cdroot!cdroot scandelay=5 boothttp=$PXEBOOTSRV_HTTPSERVER!g" /tftpboot/pxelinux.cfg/default
		#sed -i -e "s!append!append scandelay=5 netboot=$PXEBOOTSRV_HTTPSERVER!g" /tftpboot/pxelinux.cfg/default
		#cp ${bootdir}/isolinux/*.msg /tftpboot/
		#if [ ! "$?" -eq '0' ]
		#then
		#	eerror "Cannot copy *.msg to /tftpboot/. Memory probably missing."
		#	return 1
		#fi

		#sed -i -e "s!scandelay=1!scandelay=5 netboot=$PXEBOOTSRV_HTTPSERVER ${PXEBOOTSRV_EXTRA}!g" /tftpboot/pxelinux.cfg/default

		if [ "$PXEBOOTSRV_DOHTTPD" == "yes" ]
		then
			#sed -i -e "s!scandelay=.!scandelay=5 netboot=$PXEBOOTSRV_HTTPSERVER ${PXEBOOTSRV_EXTRA}!g" /tftpboot/pxelinux.cfg/default
			sed -i -e "s!scandelay=.!scandelay=5 netboot=$PXEBOOTSRV_HTTPSERVER ${PXEBOOTSRV_EXTRA} autoruns=1 ar_source=http://$PXEBOOTSRV_TFTPSERVER/ ar_nowait!g" /tftpboot/pxelinux.cfg/default

			#=================================
#			# /tftpboot/pxelinux.cfg/default
#			echo "label cp2
#kernel rescuecd
#append scandelay=5 netboot=$PXEBOOTSRV_HTTPSERVER initrd=initram.igz setkmap=fr work=cli_partimaged.sh ip_serveur_partimaged=$PXEBOOTSRV_LOCALIP autoruns=1 ar_source=http://$PXEBOOTSRV_TFTPSERVER/ ar_nowait
#" >> /tftpboot/pxelinux.cfg/default

			echo "label cp2
MENU LABEL cp2) SystemRescueCd: FR perso
#kernel rescuecd
LINUX rescue32
initrd initram.igz
append scandelay=5 netboot=$PXEBOOTSRV_HTTPSERVER setkmap=fr work=cli_partimaged.sh ip_serveur_partimaged=$PXEBOOTSRV_LOCALIP autoruns=1 ar_source=http://$PXEBOOTSRV_TFTPSERVER/ ar_nowait
" >> /tftpboot/pxelinux.cfg/default

			#=================================

		fi
		if [ "$PXEBOOTSRV_DONBD" == "yes" ]
		then
			sed -i -e "s!scandelay=.!scandelay=5 netboot=nbd://$PXEBOOTSRV_LOCALIP:2000 ${PXEBOOTSRV_EXTRA}!g" /tftpboot/pxelinux.cfg/default
		fi
		if [ "$PXEBOOTSRV_DONFSD" == "yes" ]
		then
			sed -i -e "s!scandelay=.!scandelay=5 netboot=nfs://$PXEBOOTSRV_LOCALIP:/tftpboot ${PXEBOOTSRV_EXTRA}!g" /tftpboot/pxelinux.cfg/default
		fi
	fi

	#==============================
	# Le fichier /tftpboot/pxelinux.cfg/default genere avait des droits 750... c est ce qui provoquait un message comme quoi le fichier pxelinux.cfg/default ne pouvait pas etre trouve.
	chmod -R 755 /tftpboot/pxelinux.cfg
	#==============================

	# ---- start the NFS server
	if [ "$PXEBOOTSRV_DONFSD" == "yes" ]
	then
		# ---- nfs export /tftpboot
		touch /etc/exports
		sed -i -e 's!^/tftpboot!#/tftpboot!g' /etc/exports
		echo "/tftpboot *(fsid=0,ro,no_subtree_check,all_squash,insecure,anonuid=1000,anongid=1000)" >> /etc/exports
	fi

	# ---- start the NBD server
	if [ "$PXEBOOTSRV_DONBD" == "yes" ]
	then
		PXEBOOTSRV_DOHTTPD="no"
		/usr/bin/nbd-server $PXEBOOTSRV_LOCALIP:2000 /tftpboot/sysrcd.dat -r
	fi

	# ---- stop network manager to avoid conflicts
	#/etc/init.d/NetworkManager stop

	# ---- start the DHCPD service
	if [ "$PXEBOOTSRV_DODHCPD" == "yes" ]
	then
		echo ""
		echo "Lancement de dhcpd"
		/etc/init.d/dhcpd restart
		if [ "$?" != "0" ]
		then
			eerror "Cannot start /etc/init.d/dhcpd, check /var/log/messages"
			return 1
		fi 
	fi

	# ---- start the THTTPD service
	if [ "$PXEBOOTSRV_DOHTTPD" == "yes" ]
	then
		echo ""
		echo "Lancement de thttpd"
		/etc/init.d/thttpd restart
		if [ "$?" != "0" ]
		then
			eerror "Cannot start /etc/init.d/thttpd"
			return 1
		fi 
	fi

	# ---- start the TFTPD service
	if [ "$PXEBOOTSRV_DOTFTPD" == "yes" ]
	then
		echo ""
		echo "Lancement de tftpd"
		/etc/init.d/in.tftpd restart
		if [ "$?" != "0" ]
		then
			eerror "Cannot start /etc/init.d/in.tftpd"
			return 1
		fi 
	fi

	# ---- start the NFS server
	if [ "$PXEBOOTSRV_DONFSD" == "yes" ]
	then
		/etc/init.d/nfs restart
		if [ "$?" != "0" ]
		then
			eerror "Cannot start /etc/init.d/nfs"
			return 1
		fi

	fi

	return 0
}

stop()
{
	ebegin "Stopping the pxe-boot-server"

	/etc/init.d/thttpd stop
	/etc/init.d/in.tftpd_crob stop
	/etc/init.d/dhcpd_crob stop

	return 0
}
